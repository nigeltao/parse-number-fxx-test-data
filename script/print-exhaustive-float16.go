// Copyright 2021 The ParseNumberFxxTestData Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// ----------------

//go:build ignore
// +build ignore

package main

// print-exhaustive-float16.go prints the exhaustive-float16/raw.txt file.
//
// See https://en.wikipedia.org/wiki/Half-precision_floating-point_format

import (
	"fmt"
)

func main() {
	fmt.Println("# This file was generated by script/print-exhaustive-float16.go")
	fmt.Println("#")
	fmt.Println("# It lists every finite non-negative float16 value as well as a final value")
	fmt.Println("# that is parsed as positive infinity.")

	for exp := uint32(0); exp < 31; exp++ {
		for man := uint64(0); man < 1024; man++ {
			m := (man | 1024) << exp
			if exp == 0 { // Subnormals.
				m = man << 1
			}
			const twoToTheMinus25 = 2.98023223876953125e-8
			fmt.Printf("%.999g\n", twoToTheMinus25*float64(m))
		}
	}

	fmt.Printf("65536\n")
}
